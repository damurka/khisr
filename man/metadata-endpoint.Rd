% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_metadata_endpoint.R
\name{metadata-endpoint}
\alias{metadata-endpoint}
\alias{get_categories}
\alias{get_category_combos}
\alias{get_category_option_combos}
\alias{get_category_option_group_sets}
\alias{get_category_option_groups}
\alias{get_category_options}
\alias{get_data_element_group_sets}
\alias{get_data_element_groups}
\alias{get_data_elements}
\alias{get_data_sets}
\alias{get_user_groups}
\alias{get_indicator_group_sets}
\alias{get_indicator_groups}
\alias{get_indicators}
\alias{get_option_group_sets}
\alias{get_option_groups}
\alias{get_option_sets}
\alias{get_options}
\alias{get_organisation_unit_groupsets}
\alias{get_organisation_unit_groups}
\alias{get_organisation_units}
\alias{get_dimensions}
\title{Get Metadata from Specified Endpoints}
\usage{
get_categories(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_category_combos(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_category_option_combos(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_category_option_group_sets(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_category_option_groups(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_category_options(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_data_element_group_sets(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_data_element_groups(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_data_elements(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_data_sets(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_user_groups(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_indicator_group_sets(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_indicator_groups(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_indicators(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_option_group_sets(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_option_groups(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_option_sets(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_options(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_organisation_unit_groupsets(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_organisation_unit_groups(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_organisation_units(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)

get_dimensions(
  values,
  by = c("id", "name", "code", "shortName"),
  fields = NULL,
  ...
)
}
\arguments{
\item{values}{The values to filter against.}

\item{by}{The property on the metadata you want to filter on. The options
include \code{'id'} (default), \code{'name'},  \code{'code'} and \verb{'shortName}}

\item{fields}{The specific columns to be returned in the tibble. The default
NULL will return the \code{"id"} and \code{"name"}.}

\item{...}{
  Arguments passed on to \code{\link[=get_metadata]{get_metadata}}
  \describe{
    \item{\code{retry}}{Number of times to retry the API call in case of failure
(defaults to 2).}
    \item{\code{verbosity}}{Level of HTTP information to print during the call:
\itemize{
\item 0: No output
\item 1: Show headers
\item 2: Show headers and bodies
\item 3: Show headers, bodies, and CURL status message.
}}
    \item{\code{timeout}}{Maximum number of seconds to wait for the API response.}
  }}
}
\value{
A tibble with the KHIS metadata response.
}
\description{
Wrappers for \code{\link[=get_metadata]{get_metadata()}} that retrieves data from a specific KHIS API endpoint.
}
\examples{
\dontshow{if (khis_has_cred()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

# Get the data elements by id
get_data_elements(values = c('VR7vdS7P0Gb', 'gQro1y7Rsbq'), by = 'id')
\dontshow{\}) # examplesIf}
}
